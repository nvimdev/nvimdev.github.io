<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title/><link>https://dev.neovim.pro/lspsaga/</link><description>Recent content on</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://dev.neovim.pro/lspsaga/index.xml" rel="self" type="application/rss+xml"/><item><title>Diagnostic</title><link>https://dev.neovim.pro/lspsaga/diagnostic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dev.neovim.pro/lspsaga/diagnostic/</guid><description>Diagnostic Jump Usage # you need config a keymap for command :Lspsaga diangostic_jump_next and :Lspsaga diagnsotic_jump_prev. When cursor position have diagnostic it will show in current not go prev or next position.
when diagnostic window rendered. you can use scroll_preview to preview code action. default is &amp;lt;C-f&amp;gt; and &amp;lt;C-b&amp;gt;.
workflow in gif need jump_num_shutcut true.
set [e to jump next diangostic vim.keymap.set('n', '[e', '&amp;lt;cmd&amp;gt;Lspsaga diagnsotic_jump_next) current position has diagnsotic so not jump to other place.</description></item><item><title>Callhierarchy</title><link>https://dev.neovim.pro/lspsaga/callhierarchy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dev.neovim.pro/lspsaga/callhierarchy/</guid><description>Callhierarchy Usage # callhierarchy has two commands :Lspsaga incoming_calls and :Lspsaga outgoing_calls.
Default Options # default options in callhierarchy section
layout = 'float' layout available value normal float Default Keymaps # default keymaps in callhierarchy.keys
edit = 'e' edit(open) file vsplit = 's' vsplit split = 'i' split tabe = 't' open in tabe quit = 'q' quit f shuttle = '[w' shuttle bettween the layout left and right toggle_or_req = 'u' toggle or do requese.</description></item><item><title>Code Action</title><link>https://dev.neovim.pro/lspsaga/codeaction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dev.neovim.pro/lspsaga/codeaction/</guid><description>Code Action Usage # command is :Lspsaga code_action
suggest workflow
if you know the action do just press the action number if you don&amp;rsquo;t know what the action do move to it see action preview then press CR Default Options # default options in code_action section.
num_shortcut = true support number shutcut execute action when code action window show show_server_name = false show language server name extend_gitsigns = false extend gitsigns plugin diff action Default keymaps # defualt keymap in code_action.</description></item><item><title>Definition</title><link>https://dev.neovim.pro/lspsaga/definition/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dev.neovim.pro/lspsaga/definition/</guid><description>Peek Definition/TypeDefinition Usage # command are :Lspsaga peek_definition and :Lspsaga peek_type_definition . layout is drawer current only has this layout style.
Default Options # default options in definition section
width = 0.6 definition float window width height = 0.5 definition float window height Default Keymap # keymap config in definition.keys section
edit = '&amp;lt;C-c&amp;gt;o' vsplit = '&amp;lt;C-c&amp;gt;v' split = '&amp;lt;C-c&amp;gt;i' tabe = '&amp;lt;C-c&amp;gt;t' quit = 'q' close = '&amp;lt;C-c&amp;gt;k' Why keymap not a single character ?</description></item><item><title>Finder</title><link>https://dev.neovim.pro/lspsaga/finder/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dev.neovim.pro/lspsaga/finder/</guid><description>Finder Usage # finder is a ui interface to show lsp methods result.
basiclly usage is :Lspsaga finder then you will see the finder layout window . It will show you the references and implemnetation results. relate options is default = 'ref+imp' (see above)
Default Options # these are defeault options in finder section.
max_height = 0.5 max_height of finder layout window left_width = 0.3 finder layout left window width- default = 'ref+imp' default methods show in finder ref mean references imp mean implementation they are alias methods = {} key is alias of lsp methods value is lsp methods which you want show in finder.</description></item><item><title>Hover</title><link>https://dev.neovim.pro/lspsaga/hover/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dev.neovim.pro/lspsaga/hover/</guid><description>Hover Usage # command is :Lspsaga hover_doc. and run command twice will close hover window
config a keymap like:
vim.keymap.set(&amp;#39;n&amp;#39;, &amp;#39;K&amp;#39;, &amp;#39;&amp;lt;cmd&amp;gt;Lspsaga hover_doc&amp;#39;) Default Options # default options in hover section.
max_width = 0.9 max_height = 0.8 open_link = 'gx' open_cmd = '!chrome' Pre Require # treesitter markdown and markdown_inline parser . If you got trouble run :checkhealth first.
Why need these pareser. Unlike the built-in hover vim.lsp.buf.hover. it use regex syntax render markdown.</description></item><item><title>Implement</title><link>https://dev.neovim.pro/lspsaga/implement/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dev.neovim.pro/lspsaga/implement/</guid><description>Pre require # symbols_in_winbar.enable is true. otherwise this module not work.
Show implmentation result usage # when buffer has interface type. lspsaga will show the implmentation result of interface type. like
support dynamisc render like:
Use with finder # when you see the interface has implementations and you want look at these implementations you can use finder to show it by using :Lspsaga finder imp
Default Options # default options in implement section.</description></item><item><title>LightBulb</title><link>https://dev.neovim.pro/lspsaga/lightbulb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dev.neovim.pro/lspsaga/lightbulb/</guid><description> Lightbulb usage # if line has code action the lightbulb will show.
Default Options # enable = true enable sign = true sign virtual_text = true virtual text debounce = 10 timer debounce sign_priority = 40 sign priority How to change the sign # the sign is ui.code_action(see misc.md) config it like:
require(&amp;#39;lspsaga&amp;#39;).setup({ ui = { code_action = &amp;#39;your icon&amp;#39; } })</description></item><item><title>Outline</title><link>https://dev.neovim.pro/lspsaga/outline/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dev.neovim.pro/lspsaga/outline/</guid><description>Pre require # symbols_in_winbar.enable = true if false the outline not work.
Outline usage # command is :Lspsaga outline
Default Options # default options of outline section.
win_position = 'right' window position win_width = 30 window width auto_preview = true auto preview when cursor moved in outline window detail = true show detail auto_close = true auto close when outline window is last window close_after_jump = true close after jump Default keymaps # default keymaps in outline.</description></item><item><title>Rename</title><link>https://dev.neovim.pro/lspsaga/rename/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dev.neovim.pro/lspsaga/rename/</guid><description>Rename Usage # command is :Lspsaga lsp_rename. when open rename window it will also highlight the references in this buffer.
Default Options # default options in rename section.
in_select = true defualt is true when open rename window is select mode auto_save = true auto save file when rename done project_max_width = 0.5 set project_replace float window width project_max_height = 0.5 set project_replace Float window height Default keymaps # default keymap in rename.</description></item><item><title>Symbols In Winbar</title><link>https://dev.neovim.pro/lspsaga/symbolswinbar/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dev.neovim.pro/lspsaga/symbolswinbar/</guid><description> Symbols in winbar # support dynamisc render when you input like.
Important
this module is the pre requeuire of outline implement module.
Default Options # default options in symbol_in_winbar section
enable = true enable separator = ' ‚Ä∫ ' separator symbol hide_keyword = false this need treesitter when is true some symbols name like if for will ignored show_file = true show file before symbols folder_level = 1 show how many folder before file name color_mode = true true mean the symbol name and icon have same color otherwise symbol name is light-white dely = 300 dynamisc render delay</description></item><item><title/><link>https://dev.neovim.pro/lspsaga/other/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dev.neovim.pro/lspsaga/other/</guid><description>Default Ui Options # default options of ui section
border = 'single' default border devicon = true use nvim-web-devicon title = true show title in some float window expand = '‚äû' expand icon collapse = '‚äü' collapse icon code_action = 'üí°' code action icon actionfix = 'Ó¨ì ' action fix icon lines = { '‚îó', '‚î£', '‚îÉ', '‚îÅ', '‚îè' } virtual text connect lines kind = {} lsp kind custom table imp_sign = 'Û∞≥õ ' implement icon Default Beacon Options # In lspsaga some commands which provide jump .</description></item></channel></rss>