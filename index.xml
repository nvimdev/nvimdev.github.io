<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Welcome to nvimdev! on</title><link>https://dev.neovim.pro/</link><description>Recent content in Welcome to nvimdev! on</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://dev.neovim.pro/index.xml" rel="self" type="application/rss+xml"/><item><title>Breadcrumbs</title><link>https://dev.neovim.pro/lspsaga/breadcrumbs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dev.neovim.pro/lspsaga/breadcrumbs/</guid><description> Usage # Dynamically render breadcrumb symbols in your winbar, similar to gui IDEs
Important
This module is the prerequisite for the outline and the implement module.
Default Options # Default options in symbol_in_winbar section
enable = true enable separator = ' ‚Ä∫ ' separator symbol hide_keyword = false when true some symbols like if and for will be ignored (needs treesitter) show_file = true show file name before symbols folder_level = 1 show how many folder layers before the file name color_mode = true true mean the symbol name and icon have same color otherwise symbol name is light-white delay = 300 dynamic render delay</description></item><item><title>Callhierarchy</title><link>https://dev.neovim.pro/lspsaga/callhierarchy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dev.neovim.pro/lspsaga/callhierarchy/</guid><description>Usage # The callhierarchy module has two commands :Lspsaga incoming_calls and :Lspsaga outgoing_calls.
Default Options # default options in callhierarchy section
layout = 'float' layout normal or float or you can pass in an extra argument like so :Lspsaga incoming_calls ++normal which overrides this option Default Keymaps # default keymaps in callhierarchy.keys
edit = 'e' edit(open) file vsplit = 's' vsplit split = 'i' split tabe = 't' open in new tab quit = 'q' quit f shuttle = '[w' shuttle bettween the layout left and right toggle_or_req = 'u' toggle or do request.</description></item><item><title>Code Action</title><link>https://dev.neovim.pro/lspsaga/codeaction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dev.neovim.pro/lspsaga/codeaction/</guid><description>Usage # Use :Lspsaga code_action to invoke
tips
if you know the action do just press the action number if you don&amp;rsquo;t know what the action do move to it, take a look at the action preview, then press CR Default Options # default options in code_action section.
num_shortcut = true whether number shortcut for code actions are enabled show_server_name = false show language server name extend_gitsigns = false extend gitsigns plugin diff action Default keymaps # defualt keymap in code_action.</description></item><item><title>Definition</title><link>https://dev.neovim.pro/lspsaga/definition/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dev.neovim.pro/lspsaga/definition/</guid><description>Usage # Invoke by running :Lspsaga peek_definition and :Lspsaga peek_type_definition. Layout is drawer and is currently the only one available. If you want to go to the definition, use :Lspsaga goto_definition and :Lspsaga goto_type_definition.
Default Options # Default options in definition section
width = 0.6 defines float window width height = 0.5 defines float window height Default Keymap # edit = '&amp;lt;C-c&amp;gt;o' vsplit = '&amp;lt;C-c&amp;gt;v' split = '&amp;lt;C-c&amp;gt;i' tabe = '&amp;lt;C-c&amp;gt;t' quit = 'q' close = '&amp;lt;C-c&amp;gt;k' Why the keymaps are not a single character?</description></item><item><title>Diagnostic</title><link>https://dev.neovim.pro/lspsaga/diagnostic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dev.neovim.pro/lspsaga/diagnostic/</guid><description>Usage # Invoke :Lspsaga diangostic_jump_next and :Lspsaga diagnostic_jump_prev to jump around diagnostics, when the current cursor position has a diagnostic available the commands will show the diagnostic in a nice float.
You can use scroll_preview to preview code action in the diagnostic window. Default keybind is &amp;lt;C-f&amp;gt; and &amp;lt;C-b&amp;gt;.
Workflow shown in the gif sets jump_num_shutcut to true.
[e was bind to diagnostic_jump_next vim.keymap.set('n', '[e', '&amp;lt;cmd&amp;gt;Lspsaga diagnostic_jump_next') The current position has diagnostic so a diagnostic window is opened in place.</description></item><item><title>Finder</title><link>https://dev.neovim.pro/lspsaga/finder/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dev.neovim.pro/lspsaga/finder/</guid><description>Usage # Finder is an ui interface to show lsp methods search result.
Invoke :Lspsaga finder and you will see the finder window. By default it shows results for references and implementation.
Default Options # These are default options in finder section of the setup table.
max_height = 0.5 max_height of the finder window left_width = 0.3 width of the left finder window default = 'ref+imp' default search results shown, ref for references and imp for implementation methods = {} key is alias of lsp methods, value is lsp methods which you want show in finder, more info below.</description></item><item><title>Hover</title><link>https://dev.neovim.pro/lspsaga/hover/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dev.neovim.pro/lspsaga/hover/</guid><description>Usage # Run :Lspsaga hover_doc. If a hover window is opened then the command would close it.
Use :Lspsaga hover_doc ++keep when you want keep the hover window, it will pin the hover window to the top right of your buffer.
Keymap example:
vim.keymap.set(&amp;#39;n&amp;#39;, &amp;#39;K&amp;#39;, &amp;#39;&amp;lt;cmd&amp;gt;Lspsaga hover_doc&amp;#39;) Prerequisite # You need to install the Treesitter markdown and markdown_inline parser. If you are not sure if you have them run :checkhealth .</description></item><item><title>Implement</title><link>https://dev.neovim.pro/lspsaga/implement/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dev.neovim.pro/lspsaga/implement/</guid><description> Usage # When buffer has instances of the interface type, Lspsaga will show extra information for it:
Supports dynamic rendering:
Finder Integration # Run :Lspsaga finder imp to search and preview implementations of interface
Default Options # Enable the breadcrumbs feature symbols_in_winbar.enable = true or this module would not work default options in implement section.
enable = true enable sign = true show sign in status column virtual_text = true show virtual text at the end of line priority = 100 sign priority</description></item><item><title>LightBulb</title><link>https://dev.neovim.pro/lspsaga/lightbulb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dev.neovim.pro/lspsaga/lightbulb/</guid><description> Usage # Automatically show lightbulbs when the current line has available code actions
Default Options # enable = true enable sign = true show sign in status column virtual_text = true show virtual text at the end of line debounce = 10 timer debounce sign_priority = 40 sign priority How to change the sign # The sign uses ui.code_action(see misc.md):
require(&amp;#39;lspsaga&amp;#39;).setup({ ui = { code_action = &amp;#39;your icon&amp;#39; } })</description></item><item><title>Outline</title><link>https://dev.neovim.pro/lspsaga/outline/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dev.neovim.pro/lspsaga/outline/</guid><description>Usage # Run :Lspsaga outline
Default Options # Enable the breadcrumbs feature symbols_in_winbar.enable = true or this module would not work default options of outline section.
win_position = 'right' window position win_width = 30 window width auto_preview = true auto preview when cursor moved in outline window detail = true show detail auto_close = true auto close itself when outline window is last window close_after_jump = true close after jump Default keymaps # Default keymaps in outline.</description></item><item><title>Rename</title><link>https://dev.neovim.pro/lspsaga/rename/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dev.neovim.pro/lspsaga/rename/</guid><description>Usage # Run :Lspsaga lsp_rename. Other than opening the float input window it will also highlight the references in this buffer.
Default Options # default options in rename section.
in_select = true defualts to true, whether the name is selected when the float opens In some situation like just want change one or less characters. in_select is not so useful. You can tell the Lspsaga to start in normal mode using an extra argument like so :Lspsaga lsp_rename mode=n.</description></item><item><title>Ui Beacon</title><link>https://dev.neovim.pro/lspsaga/misc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dev.neovim.pro/lspsaga/misc/</guid><description>Generic UI Options # Generic options for the lspsaga UI
border = 'single' border type, see :help nvim_open_win devicon = true whether to use nvim-web-devicon title = true show title in some float window expand = '‚äû' expand icon collapse = '‚äü' collapse icon code_action = 'üí°' code action icon actionfix = 'Ó¨ì ' action fix icon lines = { '‚îó', '‚î£', '‚îÉ', '‚îÅ', '‚îè' } symbols used in virtual text connect kind = {} lsp kind custom table imp_sign = 'Û∞≥õ ' implement icon Beacon # In lspsaga some commands jump around in buffer(s).</description></item></channel></rss>