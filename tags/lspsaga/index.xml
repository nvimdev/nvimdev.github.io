<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>lspsaga on</title><link>https://dev.neovim.pro/tags/lspsaga/</link><description>Recent content in lspsaga on</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://dev.neovim.pro/tags/lspsaga/index.xml" rel="self" type="application/rss+xml"/><item><title>Breadcrumbs</title><link>https://dev.neovim.pro/lspsaga/breadcrumbs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dev.neovim.pro/lspsaga/breadcrumbs/</guid><description> Usage # Dynamically render breadcrumb symbols in your winbar, similar to gui IDEs
Important
This module is the prerequisite for the outline and the implement module.
Default Options # Default options in symbol_in_winbar section
enable = true enable separator = ' ‚Ä∫ ' separator symbol hide_keyword = false when true some symbols like if and for will be ignored (needs treesitter) show_file = true show file name before symbols folder_level = 1 show how many folder layers before the file name color_mode = true true mean the symbol name and icon have same color otherwise symbol name is light-white delay = 300 dynamic render delay</description></item><item><title>Breadcrumbs</title><link>https://dev.neovim.pro/lspsaga/misc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dev.neovim.pro/lspsaga/misc/</guid><description>Generic UI Options # Generic options for the lspsaga UI
border = 'single' border type, see :help nvim_open_win devicon = true whether to use nvim-web-devicon title = true show title in some float window expand = '‚äû' expand icon collapse = '‚äü' collapse icon code_action = 'üí°' code action icon actionfix = 'Ó¨ì ' action fix icon lines = { '‚îó', '‚î£', '‚îÉ', '‚îÅ', '‚îè' } symbols used in virtual text connect kind = {} lsp kind custom table imp_sign = 'Û∞≥õ ' implement icon Beacon # In lspsaga some commands jump around in buffer(s).</description></item><item><title>Callhierarchy</title><link>https://dev.neovim.pro/lspsaga/callhierarchy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dev.neovim.pro/lspsaga/callhierarchy/</guid><description>Usage # The callhierarchy module has two commands :Lspsaga incoming_calls and :Lspsaga outgoing_calls.
Default Options # default options in callhierarchy section
layout = 'float' layout normal or float or you can pass in an extra argument like so :Lspsaga incoming_calls ++normal which overrides this option Default Keymaps # default keymaps in callhierarchy.keys
edit = 'e' edit(open) file vsplit = 's' vsplit split = 'i' split tabe = 't' open in new tab quit = 'q' quit f shuttle = '[w' shuttle bettween the layout left and right toggle_or_req = 'u' toggle or do request.</description></item><item><title>Code Action</title><link>https://dev.neovim.pro/lspsaga/codeaction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dev.neovim.pro/lspsaga/codeaction/</guid><description>Usage # Use :Lspsaga code_action to invoke
tips
if you know the action do just press the action number if you don&amp;rsquo;t know what the action do move to it, take a look at the action preview, then press CR Default Options # default options in code_action section.
num_shortcut = true whether number shortcut for code actions are enabled show_server_name = false show language server name extend_gitsigns = false extend gitsigns plugin diff action Default keymaps # defualt keymap in code_action.</description></item><item><title>Diagnostic</title><link>https://dev.neovim.pro/lspsaga/diagnostic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dev.neovim.pro/lspsaga/diagnostic/</guid><description>Usage # Invoke :Lspsaga diangostic_jump_next and :Lspsaga diagnostic_jump_prev to jump around diagnostics, when the current cursor position has a diagnostic available the commands will show the diagnostic in a nice float.
You can use scroll_preview to preview code action in the diagnostic window. Default keybind is &amp;lt;C-f&amp;gt; and &amp;lt;C-b&amp;gt;.
Workflow shown in the gif sets jump_num_shutcut to true.
[e was bind to diagnostic_jump_next vim.keymap.set('n', '[e', '&amp;lt;cmd&amp;gt;Lspsaga diagnostic_jump_next') The current position has diagnostic so a diagnostic window is opened in place.</description></item></channel></rss>